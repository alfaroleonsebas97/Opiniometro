@model Opiniometro_WebApp.Models.Item

@{
    ViewBag.Title = "Crear Pregunta";
}

@* Inclusiones necesarias para poder hacer validaciones *@
<link href="~/Content/Site.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<h2>Crear Pregunta</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Item</h4>*@
        <hr />

        <div class="form-group">
            @Html.Label("Código", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemId, new { htmlAttributes = new { @class = "form-control", @maxlength = "11" } })
                @Html.ValidationMessageFor(model => model.ItemId, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Tipo Pregunta", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TipoPregunta, new SelectList(ViewBag.TipoPreguntaItems, "Value", "Text"), "Seleccione")
                @Html.ValidationMessageFor(model => model.TipoPregunta, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("Texto Pregunta", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TextoPregunta, new { htmlAttributes = new { @class = "form-control", @maxlength = "121" } })
                @Html.ValidationMessageFor(model => model.TextoPregunta, "", new { @class = "text-danger" })
            </div>
        </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Categoria, "Categoría", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("NombreCategoria", null, "Seleccione")
            @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
        </div>
    </div>


        <div class="form-group">
            @Html.Label("Tiene Observación", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.TieneObservacion, new SelectList(ViewBag.BooleanItems, "Value", "Text"), "Seleccione")
                @Html.ValidationMessageFor(model => model.TieneObservacion, "", new { @class = "text-danger" })
            </div>
        </div>


        @* Creacion de botones en la misma linea y con color gris *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-secondary" p id="botonCrear" onclick="accionBotonCrear()" />
                @*<input type="submit" value="Vista Previa" disabled class="btn btn-secondary" p id="botonVistaPrevia" onclick="accionBotonVistaPrevia()"/>*@
                <input type="button" value="Cancelar" class="btn btn-secondary" id="botonCancelar" onclick="accionBotonCancelar()" />
            </div>
        </div>


        @* La accion que sucede al seleccionar boton Cancelar *@
        <script>
        function accionBotonCancelar() {
            document.location = '@Url.Action("Index")';
        }
        </script>

    </div>
}